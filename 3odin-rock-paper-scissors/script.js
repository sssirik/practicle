// Константы игры
const Варианты = Object.freeze({
  КАМЕНЬ: "камень",
  НОЖНИЦЫ: "ножницы",
  БУМАГА: "бумага"
});

const Результат = Object.freeze({
  ИГРОК: "игрок",
  КОМПЬЮТЕР: "компьютер",
  НИЧЬЯ: "ничья"
});

// Состояние игры
const состояниеИгры = {
  счетИгрока: 0,
  счетКомпьютера: 0,
  играАктивна: true,
  очковДляПобеды: 5
};

// Элементы интерфейса
const элементы = {
  информация: document.getElementById("game-info"),
  кнопки: document.getElementById("game-buttons"),
  счет: document.getElementById("game-scores"),
  счетИгрока: null,
  счетКомпьютера: null
};

// Игровая логика
function получитьВыборКомпьютера() {
  const варианты = Object.values(Варианты);
  return варианты[Math.floor(Math.random() * варианты.length)];
}

function определитьПобедителяРаунда(выборИгрока, выборКомпьютера) {
  if (выборИгрока === выборКомпьютера) return Результат.НИЧЬЯ;

  const условияПобеды = {
      [Варианты.КАМЕНЬ]: Варианты.НОЖНИЦЫ,
      [Варианты.НОЖНИЦЫ]: Варианты.БУМАГА,
      [Варианты.БУМАГА]: Варианты.КАМЕНЬ
  };

  return условияПобеды[выборИгрока] === выборКомпьютера 
      ? Результат.ИГРОК 
      : Результат.КОМПЬЮТЕР;
}

function обновитьИнтерфейс(результат, выборИгрока, выборКомпьютера) {
  switch (результат) {
      case Результат.ИГРОК:
          элементы.информация.textContent = `Вы выиграли! ${выборИгрока} побеждает ${выборКомпьютера}`;
          элементы.счетИгрока.textContent = `Игрок: ${состояниеИгры.счетИгрока}`;
          break;
      case Результат.КОМПЬЮТЕР:
          элементы.информация.textContent = `Компьютер выиграл! ${выборКомпьютера} побеждает ${выборИгрока}`;
          элементы.счетКомпьютера.textContent = `Компьютер: ${состояниеИгры.счетКомпьютера}`;
          break;
      case Результат.НИЧЬЯ:
          элементы.информация.textContent = `Ничья! Оба выбрали ${выборИгрока}`;
          break;
  }

  if (состояниеИгры.счетИгрока >= состояниеИгры.очковДляПобеды || 
      состояниеИгры.счетКомпьютера >= состояниеИгры.очковДляПобеды) {
      завершитьИгру();
  }
}

function завершитьИгру() {
  состояниеИгры.играАктивна = false;
  
  const победитель = состояниеИгры.счетИгрока > состояниеИгры.счетКомпьютера 
      ? "Игрок" 
      : "Компьютер";
  
  элементы.информация.textContent += `\nИгра окончена! ${победитель} побеждает в игре!`;
  
  // Отключаем все кнопки ходов
  const всеКнопки = document.querySelectorAll("#game-buttons button");
  всеКнопки.forEach(кнопка => {
      кнопка.disabled = true;
  });
}

function начатьНовуюИгру() {
  // Сброс состояния
  состояниеИгры.счетИгрока = 0;
  состояниеИгры.счетКомпьютера = 0;
  состояниеИгры.играАктивна = true;
  
  // Очистка интерфейса
  элементы.кнопки.innerHTML = '';
  элементы.счет.innerHTML = '';
  
  // Создание элементов интерфейса
  создатьКнопкиХодов();
  создатьЭлементыСчета();
  
  // Начальное сообщение
  элементы.информация.textContent = "Выберите ваш ход";
}

function создатьКнопкиХодов() {
  for (const [название, значение] of Object.entries(Варианты)) {
      const кнопка = document.createElement("button");
      кнопка.textContent = значение;
      кнопка.onclick = () => сделатьХод(значение);
      элементы.кнопки.appendChild(кнопка);
  }
}

function создатьЭлементыСчета() {
  элементы.счетИгрока = document.createElement("div");
  элементы.счетИгрока.className = "score";
  элементы.счетИгрока.textContent = "Игрок: 0";
  
  элементы.счетКомпьютера = document.createElement("div");
  элементы.счетКомпьютера.className = "score";
  элементы.счетКомпьютера.textContent = "Компьютер: 0";
  
  элементы.счет.appendChild(элементы.счетИгрока);
  элементы.счет.appendChild(элементы.счетКомпьютера);
}

function сделатьХод(выборИгрока) {
  if (!состояниеИгры.играАктивна) return;
  
  const выборКомпьютера = получитьВыборКомпьютера();
  const результат = определитьПобедителяРаунда(выборИгрока, выборКомпьютера);
  
  // Обновляем счет
  if (результат === Результат.ИГРОК) {
      состояниеИгры.счетИгрока++;
  } else if (результат === Результат.КОМПЬЮТЕР) {
      состояниеИгры.счетКомпьютера++;
  }
  
  обновитьИнтерфейс(результат, выборИгрока, выборКомпьютера);
}

// Глобальная функция для кнопки "Новая игра"
function startNewGame() {
  начатьНовуюИгру();
}

// Инициализация игры при загрузке страницы
window.onload = начатьНовуюИгру;